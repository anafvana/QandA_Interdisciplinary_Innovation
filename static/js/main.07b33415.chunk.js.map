{"version":3,"sources":["components/Header.js","components/dataHandling.js","components/Keywords.js","components/Categories.js","components/Entry.js","components/Entries.js","components/CatSelector.js","components/KwSelector.js","components/Search.js","App.js","index.js"],"names":["Header","tabIndex","className","objToArray","data","a","forEach","element","push","str","fetchLabelValue","listLblVal","label","value","map","c","replace","selectEntriesCategory","allEntries","keywordlist","categoryName","list","console","log","length","deepCopyObject","entry","cat","res","categories","categoryIsPresent","selectedEntries","keywordsList","filter","kwList","kw","temp","keywords","allKeywordsArePresent","filterByKeywords","inObj","v","outObj","Array","isArray","i","Keywords","props","Categories","Entry","question","cats","dangerouslySetInnerHTML","__html","answer","Entries","name","q_and_a","CatSelector","useEffect","fetch","then","json","d","sort","setCatData","catch","error","useState","catData","htmlFor","placeholder","defaultValue","options","onChange","entrySelector","selectedKeywords","KwSelector","setKwData","kwData","isMulti","keywordList","setKeywords","selectedCategory","Search","setCategory","App","setData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07b33415.chunk.js","sourcesContent":["import './Header.css'\n\nimport React from 'react';\n\nconst Header = () => {\n    return (\n        <header tabIndex=\"0\">\n            <h1>Frequently asked questions</h1>\n            <h2>ACIT4200 - Interdisciplinary Innovation - OsloMet</h2>\n            <h3 className=\"edit-notice\">Updated weekly for the duration of the course</h3>\n        </header>\n    );\n}\n\nexport default Header;","//Transforms object into array\nfunction objToArray(data) {\n  let a = [];\n  data.forEach((element) => {\n    a.push(element.str);\n  });\n  return a;\n}\nexport { objToArray };\n\n//Creates list of labels and values for Select component\nfunction fetchLabelValue(data) {\n  let listLblVal = [{ label: \"All categories\", value: \"all\" }];\n  data.map((c) => listLblVal.push({ label: c, value: c.replace(/\\s+/g, \"-\") }));\n  return listLblVal;\n}\nexport { fetchLabelValue };\n\n//Determines whether category is present in an entry\nfunction categoryIsPresent(cat, entry) {\n  let res = false;\n  entry.categories.forEach((c) => {\n    if (cat === c.str) {\n      res = true;\n    }\n  });\n  return res;\n}\n\n//Determines whether an entry posesses ANY of the selected keywords\nfunction anyKeywordsArePresent(kwList, entry) {\n  let res = false;\n  kwList.forEach((kw) => {\n    console.log(entry.keywords);\n    entry.keywords.forEach((c) => {\n      if (kw === c.str) {\n        res = true;\n      }\n    });\n  });\n  return res;\n}\n\n//Determines whether an entry posesses ALL of the selected keywords\nfunction allKeywordsArePresent(kwList, entry) {\n  let res = true;\n  kwList.forEach((kw) => {\n    let temp = false;\n    console.log(entry.keywords);\n    entry.keywords.forEach((c) => {\n      if (kw.label === c.str) {\n        temp = true;\n      }\n    });\n    res = res * temp;\n  });\n  return res;\n}\n\n//Selects all entries with determined category and keywords\nfunction selectEntriesCategory(allEntries, keywordlist, categoryName) {\n  let list = [];\n  console.log(\"selectEntriesCategory: allEntries length: \" + allEntries.length);\n  if (categoryName === \"All categories\" || categoryName == null) {\n    list = deepCopyObject(allEntries);\n  } else {\n    allEntries.map((entry) => {\n      let ispresent = categoryIsPresent(categoryName, entry);\n      if (ispresent) {\n        list.push(deepCopyObject(entry));\n      }\n      return list;\n    });\n  }\n\n  if (keywordlist != null && keywordlist.length > 0) {\n    console.log(\"keywords are here\");\n    list = filterByKeywords(list, keywordlist);\n  }\n\n  return list;\n}\nexport { selectEntriesCategory };\n\n//Filters list of entries according to keyword list\nfunction filterByKeywords(selectedEntries, keywordsList) {\n  let list = deepCopyObject(selectedEntries);\n  list = list.filter((entry) => allKeywordsArePresent(keywordsList, entry));\n  return list;\n}\nexport { filterByKeywords };\n\n//Updates keyword list and refreshes component\nfunction updateKeywords(\n  keywordList,\n  entrySelector,\n  setKeywords,\n  allEntries,\n  selectedCategory\n) {\n  console.log(\"updateKeywords: allEntries length: \" + allEntries.length);\n  setKeywords(keywordList);\n  entrySelector(\n    selectEntriesCategory(allEntries, keywordList, selectedCategory)\n  );\n  console.log(\"done with entry selector\");\n}\nexport { updateKeywords };\n\n//Creates deep copy of object/array\nfunction deepCopyObject(inObj) {\n  if (!inObj) {\n    return inObj;\n  }\n\n  let v;\n  let outObj = Array.isArray(inObj) ? [] : {};\n  for (const i in inObj) {\n    v = inObj[i];\n    outObj[i] = typeof v === \"object\" ? deepCopyObject(v) : v;\n  }\n\n  return outObj;\n}\n","import \"./Keywords.css\";\n\nimport React from \"react\";\n\nconst Keywords = (props) => {\n  return (\n    <div>\n      <h6 className=\"propTitle\">Keywords:</h6>\n      <div className=\"keywordContainer\">\n        {props.kw.map((data) => (\n          <div className=\"keyword\">{data}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Keywords;\n","import \"./Categories.css\";\n\nimport React from \"react\";\n\nconst Categories = (props) => {\n  return (\n    <div>\n      <h6 className=\"propTitle\">Categories:</h6>\n      <div className=\"categoriesContainer\">\n        {props.cat.map((data) => (\n          <div className=\"category\">{data}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","import \"./Entry.css\";\n\nimport React from \"react\";\n\nimport Keywords from \"./Keywords\";\nimport Categories from \"./Categories\";\n\nconst Entry = (props) => {\n  return (\n    <article tabIndex=\"0\">\n      <div className=\"questWrapper\">\n        <h4>Question: {props.question}</h4>\n        <Categories cat={props.cats} />\n      </div>\n      <p>Answer:</p>\n      <div dangerouslySetInnerHTML={{ __html: props.answer }} />\n      <Keywords kw={props.kw} />\n    </article>\n  );\n};\n\nexport default Entry;\n","import React from \"react\";\nimport { objToArray } from \"./dataHandling\";\nimport Entry from \"./Entry\";\n\nconst Entries = (props) => {\n  return (\n    <section name=\"Entries matching your query\">\n      {props.data &&\n        props.data.length >= 0 &&\n        props.data.map((q_and_a) => (\n          <Entry\n            question={q_and_a.question}\n            answer={q_and_a.answer}\n            kw={objToArray(q_and_a.keywords)}\n            cats={objToArray(q_and_a.categories)}\n          />\n        ))}\n    </section>\n  );\n};\n\nexport default Entries;\n","import \"./CatSelector.css\";\n\nimport React from \"react\";\nimport Select from \"react-select\";\n\nimport { useEffect, useState } from \"react\";\nimport {\n  objToArray,\n  fetchLabelValue,\n  selectEntriesCategory,\n} from \"./dataHandling\";\n\nconst CatSelector = (props) => {\n  const getCatData = () => {\n    fetch(\"https://ingrids.space/cats\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((d) => {\n        d = objToArray(d);\n        d.sort();\n        setCatData(d);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    getCatData();\n  }, []);\n\n  const [catData, setCatData] = useState([]);\n\n  return (\n    <div className=\"catSelectorContainer\">\n      <label htmlFor=\"categories\" className=\"propTitle\">\n        Choose a category\n      </label>\n      <br></br>\n      <Select\n        placeholder=\"All categories\"\n        defaultValue=\"All categories\"\n        options={catData && catData.length >= 0 && fetchLabelValue(catData)}\n        onChange={(c) =>\n          props.entrySelector(\n            selectEntriesCategory(\n              props.allEntries,\n              props.selectedKeywords,\n              c.label\n            )\n          )\n        }\n      />\n    </div>\n  );\n};\n\nexport default CatSelector;\n","//import \"./KwSelector.css\";\n\nimport React from \"react\";\nimport Select from \"react-select\";\n\nimport { useEffect, useState } from \"react\";\nimport { objToArray, fetchLabelValue, updateKeywords } from \"./dataHandling\";\n\nconst KwSelector = (props) => {\n  const getKwData = () => {\n    fetch(\"https://ingrids.space/kws\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((d) => {\n        d = objToArray(d);\n        d.sort();\n        console.log(d);\n        setKwData(d);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    getKwData();\n  }, []);\n\n  const [kwData, setKwData] = useState([]);\n\n  return (\n    <div className=\"keywordSelectorContainer\">\n      <label htmlFor=\"categories\" className=\"propTitle\">\n        Choose keywords\n      </label>\n      <br></br>\n      <Select\n        isMulti\n        options={kwData && kwData.length >= 0 && fetchLabelValue(kwData)}\n        onChange={(c) =>\n          updateKeywords(\n            c,\n            props.entrySelector,\n            props.setKeywords,\n            props.allEntries,\n            props.selectedCategory\n          )\n        }\n      />\n    </div>\n  );\n};\n\nexport default KwSelector;\n","import \"./Search.css\";\n\nimport React from \"react\";\n\nimport CatSelector from \"./CatSelector\";\nimport KwSelector from \"./KwSelector\";\n\nconst Search = (props) => {\n  return (\n    <div className=\"searchContainer\">\n      <CatSelector\n        allEntries={props.allEntries}\n        entrySelector={props.entrySelector}\n        selectedCategory={props.selectedCategory}\n        setCategory={props.setCategory}\n        selectedKeywords={props.selectedKeywords}\n      />\n      <KwSelector\n        allEntries={props.allEntries}\n        entrySelector={props.entrySelector}\n        selectedCategory={props.selectedCategory}\n        selectedKeywords={props.selectedKeywords}\n        setKeywords={props.setKeywords}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import \"./App.css\";\n\n//Importing components\nimport Header from \"./components/Header\";\nimport Entries from \"./components/Entries\";\nimport Search from \"./components/Search\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const getData = () => {\n    fetch(\"https://ingrids.space/entries\")\n      .then((res) => {\n        console.log(res);\n        return res.json();\n      })\n      .then((d) => {\n        setData(d);\n        entrySelector(d);\n      })\n      .catch((error) => console.log(error));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const [data, setData] = useState([]);\n\n  const [selectedEntries, entrySelector] = useState([]);\n  const [selectedKeywords, setKeywords] = useState([]);\n  const [selectedCategory, setCategory] = useState(null);\n\n  /* console.log(\"All entries:\");\n  console.log(data);\n  console.log(\"Selected entries: \");\n  console.log(selectedEntries); */\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Search\n          allEntries={data}\n          entrySelector={entrySelector}\n          selectedCategory={selectedCategory}\n          setCategory={setCategory}\n          selectedKeywords={selectedKeywords}\n          setKeywords={setKeywords}\n        />\n        <Entries data={selectedEntries} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}