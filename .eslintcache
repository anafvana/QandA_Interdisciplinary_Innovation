[{"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/index.js":"1","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/App.js":"2","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Entry.js":"3","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Header.js":"4","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Keywords.js":"5","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Search.js":"6","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/CatSelector.js":"7","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/dataHandling.js":"8","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Entries.js":"9","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Categories.js":"10","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/KwSelector.js":"11"},{"size":219,"mtime":1609633901785,"results":"12","hashOfConfig":"13"},{"size":1304,"mtime":1610301685806,"results":"14","hashOfConfig":"13"},{"size":440,"mtime":1610228707141,"results":"15","hashOfConfig":"13"},{"size":377,"mtime":1608937568184,"results":"16","hashOfConfig":"13"},{"size":345,"mtime":1610228707141,"results":"17","hashOfConfig":"13"},{"size":752,"mtime":1610297010191,"results":"18","hashOfConfig":"13"},{"size":1224,"mtime":1610295563618,"results":"19","hashOfConfig":"13"},{"size":3105,"mtime":1610306598955,"results":"20","hashOfConfig":"13"},{"size":546,"mtime":1610228707141,"results":"21","hashOfConfig":"13"},{"size":358,"mtime":1610228707141,"results":"22","hashOfConfig":"13"},{"size":1165,"mtime":1610296445859,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"178oz5p",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/index.js",[],["49","50"],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/App.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Entry.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Header.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Keywords.js",[],["51","52"],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Search.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/CatSelector.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/dataHandling.js",["53"],"//Transforms object into array\nfunction objToArray(data) {\n  let a = [];\n  data.forEach((element) => {\n    a.push(element.str);\n  });\n  return a;\n}\nexport { objToArray };\n\n//Creates list of labels and values for Select component\nfunction fetchLabelValue(data) {\n  let listLblVal = [{ label: \"All categories\", value: \"all\" }];\n  data.map((c) => listLblVal.push({ label: c, value: c.replace(/\\s+/g, \"-\") }));\n  return listLblVal;\n}\nexport { fetchLabelValue };\n\n//Determines whether category is present in an entry\nfunction categoryIsPresent(cat, entry) {\n  let res = false;\n  entry.categories.forEach((c) => {\n    if (cat === c.str) {\n      res = true;\n    }\n  });\n  return res;\n}\n\n//Determines whether an entry posesses ANY of the selected keywords\nfunction anyKeywordsArePresent(kwList, entry) {\n  let res = false;\n  kwList.forEach((kw) => {\n    console.log(entry.keywords);\n    entry.keywords.forEach((c) => {\n      if (kw === c.str) {\n        res = true;\n      }\n    });\n  });\n  return res;\n}\n\n//Determines whether an entry posesses ALL of the selected keywords\nfunction allKeywordsArePresent(kwList, entry) {\n  let res = true;\n  kwList.forEach((kw) => {\n    let temp = false;\n    console.log(entry.keywords);\n    entry.keywords.forEach((c) => {\n      if (kw.label === c.str) {\n        temp = true;\n      }\n    });\n    res = res * temp;\n  });\n  return res;\n}\n\n//Selects all entries with determined category and keywords\nfunction selectEntriesCategory(allEntries, keywordlist, categoryName) {\n  let list = [];\n  console.log(\"selectEntriesCategory: allEntries length: \" + allEntries.length);\n  if (categoryName === \"All categories\" || categoryName == null) {\n    list = deepCopyObject(allEntries);\n  } else {\n    allEntries.map((entry) => {\n      let ispresent = categoryIsPresent(categoryName, entry);\n      if (ispresent) {\n        list.push(deepCopyObject(entry));\n      }\n      return list;\n    });\n  }\n\n  if (keywordlist != null && keywordlist.length > 0) {\n    console.log(\"keywords are here\");\n    list = filterByKeywords(list, keywordlist);\n  }\n\n  return list;\n}\nexport { selectEntriesCategory };\n\n//Filters list of entries according to keyword list\nfunction filterByKeywords(selectedEntries, keywordsList) {\n  let list = deepCopyObject(selectedEntries);\n  list = list.filter((entry) => allKeywordsArePresent(keywordsList, entry));\n  return list;\n}\nexport { filterByKeywords };\n\n//Updates keyword list and refreshes component\nfunction updateKeywords(\n  keywordList,\n  entrySelector,\n  setKeywords,\n  allEntries,\n  selectedCategory\n) {\n  console.log(\"updateKeywords: allEntries length: \" + allEntries.length);\n  setKeywords(keywordList);\n  entrySelector(\n    selectEntriesCategory(allEntries, keywordList, selectedCategory)\n  );\n  console.log(\"done with entry selector\");\n}\nexport { updateKeywords };\n\n//Creates deep copy of object/array\nfunction deepCopyObject(inObj) {\n  if (!inObj) {\n    return inObj;\n  }\n\n  let v;\n  let outObj = Array.isArray(inObj) ? [] : {};\n  for (const i in inObj) {\n    v = inObj[i];\n    outObj[i] = typeof v === \"object\" ? deepCopyObject(v) : v;\n  }\n\n  return outObj;\n}\n","/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Entries.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/Categories.js",[],"/home/a/Insync/anafvana@gmail.com/Google Drive/OsloMet/Interdisciplinary-Innovation_QnA/interdisciplinary-innovation-qna/src/components/KwSelector.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":31,"column":10,"nodeType":"62","messageId":"63","endLine":31,"endColumn":31},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'anyKeywordsArePresent' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]